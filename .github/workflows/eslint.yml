name: Lint (ESLint)

on:
  push:
    branches: [master]
    paths:
      - '**/*.js'
      - '**/*.jsx'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.json'
      - '.eslintrc*'
      - 'package.json'
      - 'package-lock.json'
      - '.nvmrc'
  pull_request:
    branches: [master]
    paths:
      - '**/*.js'
      - '**/*.jsx'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.json'
      - '.eslintrc*'
      - 'package.json'
      - 'package-lock.json'
      - '.nvmrc'
  schedule:
    - cron: '25 20 * * 2'
  workflow_dispatch:

concurrency:
  group: eslint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  eslint:
    name: Run ESLint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Ensure ESLint + SARIF formatter
        run: npm i -D eslint @microsoft/eslint-formatter-sarif

      - name: Run ESLint (produce SARIF)
        env:
          SARIF_ESLINT_IGNORE_SUPPRESSED: 'true'
        run: |
          npx eslint . \
            --ext .js,.jsx,.ts,.tsx \
            --cache --cache-location .eslintcache \
            --format @microsoft/eslint-formatter-sarif \
            --output-file eslint-results.sarif || true

      - name: Upload ESLint SARIF to GitHub
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
      - name: Fail build on warnings (PR only)
        if: github.event_name == 'pull_request'
        run: |
          npx eslint . \
            --ext .js,.jsx,.ts,.tsx \
            --max-warnings=0
